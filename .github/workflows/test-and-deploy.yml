name: PHP Composer

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      
      - name: Download deployer
        run: curl -LO https://deployer.org/deployer.phar && mv deployer.phar vendor/bin/dep && chmod +x vendor/bin/dep
        
      - name: Add SSH key
        env:
          DEPLOY_SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
        run: printenv DEPLOY_SSH_PRIVATE_KEY >> ~/.ssh/id_rsa
        
      - name: Deploy application
        env:
          PRODUCTION_SERVER_IP: ${{ secrets.PRODUCTION_SERVER_IP }}
        run: ./vendor/bin/dep deploy -vvv

  test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install
      
    - name: Run PHP Stan
      run: ./vendor/bin/phpstan analyze src
  

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test
